{
  "name": "mobile",
  "version": "1.0.0",
  "main": "index.js",
  "scripts": {
    "start": "expo start",
    "android": "expo run:android",
    "android:go": "expo start --android",
    "ios": "expo run:ios",
    "web": "expo start --web",
    "typecheck": "tsc --noEmit",
    "lint": "eslint . --ext .ts,.tsx --max-warnings 0",
    "lint:fix": "eslint . --ext .ts,.tsx --fix",
    "fmt": "prettier --check .",
    "fmt:fix": "prettier --write .",
    "test": "jest",
    "test:ui": "jest --watch",
    "test:run": "jest --passWithNoTests",
    "test:coverage": "jest --coverage",
    "test:watch": "jest --watch",
    "e2e": "playwright test",
    "e2e:headed": "playwright test --headed",
    "e2e:debug": "playwright test --debug",
    "deadcode": "knip",
    "deps:unused": "depcheck",
    "ts:prune": "ts-prune",
    "semgrep": "semgrep --config p/security-audit --config p/javascript --config p/typescript",
    "snyk": "snyk test",
    "test:contracts": "jest src/__tests__/contracts",
    "test:db": "jest src/__tests__/database",
    "test:integration": "jest src/__tests__/integration",
    "test:api": "pnpm run test:integration",
    "test:api:advanced": "pnpm run test:contracts && pnpm run test:integration",
    "test:performance": "jest src/__tests__/performance",
    "test:advanced": "jest src/__tests__/database/db-advanced.test.ts src/__tests__/integration/api-advanced.test.ts",
    "test:all": "node scripts/run-all-tests.js",
    "test:ci": "jest --coverage --verbose",
    "test:report": "node scripts/run-all-tests.js && echo 'Test report available in test-reports/latest.json'",
    "build": "tsc --noEmit --project tsconfig.build.json",
    "build:ios:simulator": "expo build:ios --type simulator",
    "build:analyze": "npx expo export --platform all --source-maps && npx @expo/bundle-analyzer@latest dist",
    "analyze:comprehensive": "node scripts/analyze-bundle.js",
    "analyze:deps": "dependency-cruiser --output-type json src > bundle-analysis/dependency-graph.json",
    "analyze:source-map": "npx source-map-explorer dist/_expo/static/js/**/*.hbc.map --html --replace --output bundle-analysis/source-map-analysis.html",
    "analyze:imports": "node scripts/analyze-imports.js",
    "analyze:dead-code": "node scripts/eliminate-dead-code.js",
    "optimize:dependencies": "node scripts/optimize-dependencies.js",
    "optimize:assets": "node scripts/optimize-assets.js",
    "analyze:assets": "node scripts/optimize-assets.js",
    "qa": "pnpm validate:no-placeholders && pnpm fmt:fix && pnpm lint:fix && pnpm typecheck && pnpm test:run && pnpm build",
    "qa:full": "pnpm validate:no-placeholders && pnpm fmt:fix && pnpm lint:fix && pnpm typecheck && pnpm deadcode && pnpm deps:unused && pnpm test:coverage && pnpm test:api && pnpm e2e && pnpm semgrep",
    "qa:db": "pnpm fmt:fix && pnpm lint:fix && pnpm typecheck && pnpm test:db && pnpm test:api",
    "prepare": "husky install",
    "pre-commit": "lint-staged",
    "pre-push": "pnpm run qa",
    "pre-push:full": "pnpm run qa:full",
    "validate:no-placeholders": "powershell -ExecutionPolicy Bypass -File scripts/validate-no-placeholders.ps1",
    "maestro:test": "maestro test .maestro/flows/",
    "maestro:smoke": "maestro test .maestro/flows/smoke_tests.yaml",
    "metro:test": "node simple-metro-test.js",
    "metro:validate": "node simple-metro-test.js",
    "metro:optimize": "node -e \"console.log('ðŸš€ Metro optimization enabled via metro.config.js')\"",
    "metro:benchmark": "node scripts/run-metro-benchmarks.js",
    "metro:benchmark:report": "node scripts/run-metro-benchmarks.js --report",
    "metro:benchmark:trends": "node scripts/run-metro-benchmarks.js --trends 30",
    "metro:benchmark:android": "node scripts/run-metro-benchmarks.js --config android",
    "metro:benchmark:export": "node scripts/run-metro-benchmarks.js --export json",
    "metro:clean": "rm -rf node_modules/.cache/metro && rm -rf .metro",
    "metro:reset": "npm run metro:clean && npm run start -- --reset-cache",
    "metro:benchmark:ci": "node scripts/run-metro-benchmarks.js --ci --export json --timeout 1200",
    "metro:analyze:ci": "node scripts/analyze-metro-bundle.js --platform ${PLATFORM:-android} --environment ${NODE_ENV:-production} --format json",
    "dashboard:install": "cd dashboard && npm install",
    "dashboard:start": "cd dashboard && npm start",
    "dashboard:dev": "cd dashboard && npm run dev",
    "dashboard:test": "cd dashboard && npm test",
    "dashboard:setup": "cd dashboard && npm install && echo 'Metro Dashboard ready at http://localhost:3000'",
    "benchmark:performance": "ts-node scripts/run-performance-benchmarks.ts",
    "benchmark:pipeline": "ts-node src/core/automation/__benchmarks__/pipeline.benchmark.ts",
    "benchmark:build-time": "ts-node src/core/automation/__benchmarks__/build-time-comparison.ts",
    "benchmark:simple": "node src/core/automation/__benchmarks__/simple-benchmark.js",
    "benchmark:all": "npm run benchmark:simple",
    "test:enhanced": "jest --config=jest.config.enhanced.js",
    "test:unit": "jest --config=jest.config.enhanced.js --selectProjects unit",
    "test:integration:enhanced": "jest --config=jest.config.enhanced.js --selectProjects integration",
    "test:property": "jest --config=jest.config.enhanced.js --selectProjects property-based",
    "test:chaos": "jest --config=jest.config.enhanced.js --selectProjects chaos",
    "test:performance:enhanced": "jest --config=jest.config.enhanced.js --selectProjects performance",
    "test:types": "tsd",
    "test:coverage:strict": "jest --config=jest.config.enhanced.js --coverage --passWithNoTests=false",
    "test:watch:enhanced": "jest --config=jest.config.enhanced.js --watch",
    "test:ci:enhanced": "jest --config=jest.config.enhanced.js --ci --coverage --passWithNoTests=false --runInBand",
    "test:mutation": "stryker run",
    "test:all:enhanced": "npm run test:enhanced && npm run test:types && npm run test:mutation",
    "qa:enhanced": "npm run validate:no-placeholders && npm run fmt:fix && npm run lint:fix && npm run typecheck && npm run test:ci:enhanced",
    "test:simple": "jest --config=jest.config.simple.js",
    "test:simple:watch": "jest --config=jest.config.simple.js --watch"
  },
  "dependencies": {
    "@expo/vector-icons": "^15.0.2",
    "@react-native-async-storage/async-storage": "2.2.0",
    "@react-native-community/netinfo": "^11.4.1",
    "@react-native-google-signin/google-signin": "^16.0.0",
    "@react-navigation/bottom-tabs": "^7.0.0",
    "@react-navigation/native": "^7.0.0",
    "@react-navigation/stack": "^7.0.0",
    "expo": "^54.0.10",
    "expo-auth-session": "~7.0.8",
    "expo-av": "~16.0.7",
    "expo-build-properties": "^1.0.9",
    "expo-constants": "~18.0.0",
    "expo-crypto": "~15.0.7",
    "expo-dev-client": "~6.0.12",
    "expo-device": "~8.0.8",
    "expo-file-system": "~19.0.15",
    "expo-image-picker": "~17.0.8",
    "expo-location": "~19.0.7",
    "expo-media-library": "~18.2.0",
    "expo-notifications": "0.32.11",
    "expo-secure-store": "~15.0.0",
    "expo-splash-screen": "~31.0.10",
    "expo-status-bar": "~3.0.8",
    "expo-system-ui": "^6.0.7",
    "expo-updates": "^29.0.11",
    "openai": "^5.23.0",
    "react": "19.1.0",
    "react-error-boundary": "^6.0.0",
    "react-native": "^0.81.0",
    "react-native-gesture-handler": "^2.25.0",
    "react-native-maps": "^1.20.1",
    "react-native-maps-super-cluster": "^1.6.0",
    "react-native-safe-area-context": "^5.0.0"
  },
  "devDependencies": {
    "@babel/core": "^7.25.2",
    "@babel/plugin-syntax-typescript": "^7.24.7",
    "@babel/plugin-transform-logical-assignment-operators": "^7.25.0",
    "@babel/plugin-transform-modules-commonjs": "^7.24.8",
    "@babel/plugin-transform-nullish-coalescing-operator": "^7.25.0",
    "@babel/plugin-transform-object-rest-spread": "^7.25.0",
    "@babel/plugin-transform-optional-chaining": "^7.25.0",
    "@babel/plugin-transform-react-display-name": "^7.24.7",
    "@babel/plugin-transform-react-jsx": "^7.25.2",
    "@babel/plugin-transform-react-jsx-source": "^7.24.7",
    "@babel/plugin-transform-runtime": "^7.25.0",
    "@babel/plugin-transform-typescript": "^7.25.2",
    "@babel/preset-env": "^7.25.2",
    "@babel/preset-react": "^7.24.7",
    "@babel/preset-typescript": "^7.24.7",
    "@babel/runtime": "^7.25.0",
    "@expo/webpack-config": "^19.0.1",
    "@faker-js/faker": "^10.0.0",
    "@playwright/test": "^1.55.0",
    "@react-native/eslint-config": "^0.81.1",
    "@react-native/metro-config": "^0.81.0",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/react-hooks": "^8.0.1",
    "@testing-library/react-native": "^13.3.3",
    "@types/jest": "^29.5.14",
    "@types/metro": "^0.76.3",
    "@types/node": "^24.5.2",
    "@types/react": "^19.1.0",
    "@typescript-eslint/eslint-plugin": "^8.43.0",
    "@typescript-eslint/parser": "^8.43.0",
    "@vitest/ui": "^3.2.4",
    "babel-preset-expo": "~54.0.2",
    "dependency-cruiser": "^17.0.1",
    "eslint": "^9.35.0",
    "eslint-config-expo": "^10.0.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-unused-imports": "^4.2.0",
    "happy-dom": "^18.0.1",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "jsdom": "^27.0.0",
    "knip": "^5.63.1",
    "lint-staged": "^15.5.2",
    "metro": "0.81.0",
    "metro-babel-transformer": "^0.81.0",
    "metro-cache": "^0.81.0",
    "metro-config": "^0.81.0",
    "metro-core": "^0.81.0",
    "metro-file-map": "^0.81.0",
    "metro-minify-terser": "^0.81.0",
    "metro-resolver": "^0.81.0",
    "metro-runtime": "^0.81.0",
    "metro-source-map": "^0.81.0",
    "metro-transform-plugins": "^0.81.0",
    "metro-transform-worker": "^0.81.0",
    "node-fetch": "^3.3.2",
    "node-localstorage": "^2.2.1",
    "prettier": "^3.6.2",
    "react-test-renderer": "^19.1.1",
    "source-map-explorer": "^2.5.3",
    "ts-jest": "^29.4.3",
    "ts-node": "^10.9.2",
    "ts-prune": "^0.10.3",
    "tsx": "^4.19.0",
    "typescript": "^5.6.3",
    "vitest": "^2.1.9",
    "webpack-bundle-analyzer": "^4.10.2"
  },
  "pnpm": {
    "overrides": {
      "@vitest/ui": "2.1.9"
    }
  },
  "lint-staged": {
    "*.{ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{js,jsx,json,md,yaml,yml}": [
      "prettier --write"
    ]
  }
}
