{"file":"C:\\Users\\Kenth\\Desktop\\echotrail-project\\echotrail\\apps\\mobile\\src\\__tests__\\setup\\jest.globalSetup.ts","mappings":"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","names":[],"sources":["C:\\Users\\Kenth\\Desktop\\echotrail-project\\echotrail\\apps\\mobile\\src\\__tests__\\setup\\jest.globalSetup.ts"],"sourcesContent":["/**\r\n * Jest Global Setup\r\n * \r\n * This runs once before all test suites start.\r\n * Use this for expensive setup operations that can be shared across tests.\r\n */\r\n\r\nimport * as fs from 'fs';\r\nimport * as path from 'path';\r\nimport { execSync } from 'child_process';\r\n\r\nexport default async function globalSetup(): Promise<void> {\r\n  console.log('üöÄ Starting Jest global setup...');\r\n\r\n  try {\r\n    // Create necessary test directories\r\n    const testDirs = [\r\n      './tmp/test',\r\n      './test-data',\r\n      './reports/junit',\r\n      './reports/html',\r\n      './coverage',\r\n      './.jest-cache',\r\n    ];\r\n\r\n    for (const dir of testDirs) {\r\n      if (!fs.existsSync(dir)) {\r\n        fs.mkdirSync(dir, { recursive: true });\r\n        console.log(`  ‚úÖ Created test directory: ${dir}`);\r\n      }\r\n    }\r\n\r\n    // Create test data files\r\n    const testDataDir = './test-data';\r\n    \r\n    // Mock build history for pipeline tests\r\n    const mockBuildHistory = {\r\n      builds: [\r\n        {\r\n          id: 'build-1',\r\n          timestamp: '2024-01-01T00:00:00Z',\r\n          platform: 'android',\r\n          success: true,\r\n          duration: 120000,\r\n          bundleSize: 1024000,\r\n          metrics: {\r\n            jsSize: 500000,\r\n            assetsSize: 524000,\r\n            buildTime: 120000,\r\n            memoryUsage: 256000000,\r\n          }\r\n        },\r\n        {\r\n          id: 'build-2',\r\n          timestamp: '2024-01-01T01:00:00Z',\r\n          platform: 'ios',\r\n          success: true,\r\n          duration: 150000,\r\n          bundleSize: 1100000,\r\n          metrics: {\r\n            jsSize: 550000,\r\n            assetsSize: 550000,\r\n            buildTime: 150000,\r\n            memoryUsage: 280000000,\r\n          }\r\n        }\r\n      ],\r\n      totalBuilds: 2,\r\n      successRate: 1.0,\r\n      averageDuration: 135000,\r\n    };\r\n\r\n    fs.writeFileSync(\r\n      path.join(testDataDir, 'build-history.json'),\r\n      JSON.stringify(mockBuildHistory, null, 2)\r\n    );\r\n\r\n    // Mock CI configuration templates\r\n    const mockGitHubActions = `name: EchoTrail Mobile CI\r\non: [push, pull_request]\r\njobs:\r\n  test:\r\n    runs-on: ubuntu-latest\r\n    steps:\r\n      - uses: actions/checkout@v3\r\n      - uses: actions/setup-node@v3\r\n      - run: npm ci\r\n      - run: npm test`;\r\n\r\n    fs.writeFileSync(\r\n      path.join(testDataDir, 'github-actions.yml'),\r\n      mockGitHubActions\r\n    );\r\n\r\n    // Mock package.json for test projects\r\n    const mockPackageJson = {\r\n      name: 'test-project',\r\n      version: '1.0.0',\r\n      scripts: {\r\n        build: 'metro build',\r\n        test: 'jest',\r\n      },\r\n      dependencies: {\r\n        'react-native': '^0.72.0',\r\n        '@react-native/metro-config': '^0.72.0',\r\n      },\r\n      devDependencies: {\r\n        jest: '^29.0.0',\r\n        '@types/jest': '^29.0.0',\r\n      }\r\n    };\r\n\r\n    fs.writeFileSync(\r\n      path.join(testDataDir, 'package.json'),\r\n      JSON.stringify(mockPackageJson, null, 2)\r\n    );\r\n\r\n    // Verify Node.js and npm versions for compatibility warnings\r\n    try {\r\n      const nodeVersion = process.version;\r\n      const npmVersion = execSync('npm --version', { encoding: 'utf8' }).trim();\r\n      \r\n      console.log(`  ‚ÑπÔ∏è  Node.js version: ${nodeVersion}`);\r\n      console.log(`  ‚ÑπÔ∏è  npm version: ${npmVersion}`);\r\n\r\n      // Check for known compatibility issues\r\n      const nodeMajor = parseInt(nodeVersion.slice(1).split('.')[0]);\r\n      if (nodeMajor < 16) {\r\n        console.warn('  ‚ö†Ô∏è  Warning: Node.js version < 16 may cause issues');\r\n      }\r\n\r\n    } catch (error) {\r\n      console.warn('  ‚ö†Ô∏è  Could not verify npm version');\r\n    }\r\n\r\n    // Initialize test database (in-memory SQLite for tests)\r\n    // This would be where you'd set up a test database if needed\r\n    console.log('  ‚úÖ Test database initialized (in-memory)');\r\n\r\n    // Set up test environment variables that need to persist\r\n    process.env.JEST_GLOBAL_SETUP_COMPLETE = 'true';\r\n    process.env.TEST_START_TIME = Date.now().toString();\r\n\r\n    // Create performance baseline data\r\n    const performanceBaseline = {\r\n      pipelineInitialization: 100, // ms\r\n      buildExecution: 5000,        // ms\r\n      reportGeneration: 200,       // ms\r\n      memoryUsage: 100 * 1024 * 1024, // 100MB\r\n      created: new Date().toISOString(),\r\n    };\r\n\r\n    fs.writeFileSync(\r\n      path.join(testDataDir, 'performance-baseline.json'),\r\n      JSON.stringify(performanceBaseline, null, 2)\r\n    );\r\n\r\n    // Note: Environment variables are set in jest.env.ts which runs before this\r\n    console.log('  üìã Environment variables validated from jest.env.ts');\r\n    console.log(`    NODE_ENV: ${process.env.NODE_ENV}`);\r\n    console.log(`    METRO_TEST_MODE: ${process.env.METRO_TEST_MODE}`);\r\n    console.log(`    BUILD_HISTORY_PATH: ${process.env.BUILD_HISTORY_PATH}`);\r\n    \r\n    // If variables are still missing, set defaults\r\n    if (!process.env.NODE_ENV) process.env.NODE_ENV = 'test';\r\n    if (!process.env.METRO_TEST_MODE) process.env.METRO_TEST_MODE = 'true';\r\n    if (!process.env.BUILD_HISTORY_PATH) process.env.BUILD_HISTORY_PATH = './test-data/build-history.json';\r\n\r\n    // Log test configuration summary\r\n    console.log('  üìä Test Configuration Summary:');\r\n    console.log(`    - Test timeout: ${process.env.TEST_TIMEOUT_MS || '60000'}ms`);\r\n    console.log(`    - Max memory: ${process.env.MAX_MEMORY_MB || '512'}MB`);\r\n    console.log(`    - CI mode: ${process.env.CI === 'true' ? 'Yes' : 'No'}`);\r\n    console.log(`    - Property test runs: ${process.env.PROPERTY_TEST_RUNS || '100'}`);\r\n    console.log(`    - Chaos failure rate: ${process.env.CHAOS_FAILURE_RATE || '0.1'}`);\r\n\r\n    console.log('‚úÖ Jest global setup completed successfully');\r\n\r\n  } catch (error) {\r\n    console.error('‚ùå Jest global setup failed:', error);\r\n    throw error;\r\n  }\r\n}"],"version":3}