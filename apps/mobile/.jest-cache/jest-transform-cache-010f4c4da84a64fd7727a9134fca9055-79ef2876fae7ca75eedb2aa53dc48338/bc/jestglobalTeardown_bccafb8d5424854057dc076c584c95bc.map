{"file":"C:\\Users\\Kenth\\Desktop\\echotrail-project\\echotrail\\apps\\mobile\\src\\__tests__\\setup\\jest.globalTeardown.ts","mappings":"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","names":[],"sources":["C:\\Users\\Kenth\\Desktop\\echotrail-project\\echotrail\\apps\\mobile\\src\\__tests__\\setup\\jest.globalTeardown.ts"],"sourcesContent":["/**\r\n * Jest Global Teardown\r\n * \r\n * This runs once after all test suites complete.\r\n * Use this for cleanup operations and final reporting.\r\n */\r\n\r\nimport * as fs from 'fs';\r\nimport * as path from 'path';\r\n\r\nexport default async function globalTeardown(): Promise<void> {\r\n  console.log('üßπ Starting Jest global teardown...');\r\n\r\n  try {\r\n    // Calculate total test execution time\r\n    const startTime = parseInt(process.env.TEST_START_TIME || '0');\r\n    const totalTestTime = startTime ? Date.now() - startTime : 0;\r\n    \r\n    // Generate test execution summary\r\n    const testSummary = {\r\n      totalExecutionTime: totalTestTime,\r\n      timestamp: new Date().toISOString(),\r\n      nodeVersion: process.version,\r\n      platform: process.platform,\r\n      arch: process.arch,\r\n      memoryUsage: process.memoryUsage(),\r\n      environment: process.env.NODE_ENV,\r\n      ci: process.env.CI === 'true',\r\n    };\r\n\r\n    // Write test execution summary\r\n    const reportsDir = './reports';\r\n    if (!fs.existsSync(reportsDir)) {\r\n      fs.mkdirSync(reportsDir, { recursive: true });\r\n    }\r\n\r\n    fs.writeFileSync(\r\n      path.join(reportsDir, 'test-execution-summary.json'),\r\n      JSON.stringify(testSummary, null, 2)\r\n    );\r\n\r\n    console.log(`  ‚è±Ô∏è  Total test execution time: ${totalTestTime}ms`);\r\n    console.log(`  üíæ Memory usage: ${Math.round(testSummary.memoryUsage.heapUsed / 1024 / 1024)}MB`);\r\n\r\n    // Clean up temporary test files (optional - keep for debugging)\r\n    const cleanupTempFiles = process.env.JEST_CLEANUP_TEMP === 'true';\r\n    \r\n    if (cleanupTempFiles) {\r\n      const tempDirs = [\r\n        './tmp/test',\r\n        './.jest-cache',\r\n      ];\r\n\r\n      for (const dir of tempDirs) {\r\n        if (fs.existsSync(dir)) {\r\n          fs.rmSync(dir, { recursive: true, force: true });\r\n          console.log(`  üóëÔ∏è  Cleaned up: ${dir}`);\r\n        }\r\n      }\r\n    } else {\r\n      console.log('  üìÅ Temporary files preserved for debugging');\r\n    }\r\n\r\n    // Performance analysis\r\n    if (fs.existsSync('./reports/junit/junit.xml')) {\r\n      console.log('  üìä JUnit XML report generated');\r\n    }\r\n\r\n    if (fs.existsSync('./coverage/lcov.info')) {\r\n      console.log('  üìà Coverage report generated');\r\n    }\r\n\r\n    // Check for test artifacts that might indicate issues\r\n    const possibleIssues: string[] = [];\r\n\r\n    // Check for slow test warnings\r\n    if (totalTestTime > 300000) { // 5 minutes\r\n      possibleIssues.push(`Long test execution time: ${Math.round(totalTestTime / 1000)}s`);\r\n    }\r\n\r\n    // Check memory usage\r\n    const memoryUsageMB = testSummary.memoryUsage.heapUsed / 1024 / 1024;\r\n    if (memoryUsageMB > 512) {\r\n      possibleIssues.push(`High memory usage: ${Math.round(memoryUsageMB)}MB`);\r\n    }\r\n\r\n    // Report potential issues\r\n    if (possibleIssues.length > 0) {\r\n      console.log('  ‚ö†Ô∏è  Potential issues detected:');\r\n      possibleIssues.forEach(issue => console.log(`    - ${issue}`));\r\n    }\r\n\r\n    // Final cleanup of global state\r\n    delete process.env.JEST_GLOBAL_SETUP_COMPLETE;\r\n    delete process.env.TEST_START_TIME;\r\n\r\n    console.log('‚úÖ Jest global teardown completed successfully');\r\n\r\n  } catch (error) {\r\n    console.error('‚ùå Jest global teardown failed:', error);\r\n    // Don't throw here - we don't want to fail tests due to cleanup issues\r\n  }\r\n}"],"version":3}